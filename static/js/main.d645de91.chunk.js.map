{"version":3,"sources":["services/crypto-news.js","services/crypto.js","components/Loader.js","utils/common.js","config/constants.js","components/Navbar.js","components/NewsCard.js","components/NewsList.js","components/LineChart.js","utils/crypto.js","components/ScrollToTop.js","components/CryptocurrencyCard.js","components/CryptocurrenciesList.js","pages/Home.js","pages/News.js","pages/Crypto.js","pages/Exchanges.js","pages/Cryptocurrencies.js","assets/images/cryptocurrency.png","App.js","store/index.js","reportWebVitals.js","index.js"],"names":["cryptoNewsApiHeaders","process","cryptoNewsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptoNews","query","count","category","url","headers","transformResponse","response","value","useGetCryptoNewsQuery","cryptoApiHeaders","createRequest","cryptoApi","getCryptos","coins","data","stats","getCrypto","id","coin","getCryptoHistory","timePeriod","history","getExchanges","exchanges","useGetCryptosQuery","useGetCryptoQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","className","getScreenSize","window","innerWidth","toggle","x","breakpoints","timePeriods","menuItems","path","label","icon","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Navbar","title","useState","isMenuActive","setIsMenuActive","screenSize","setScreenSize","handleMenuItemClick","useEffect","handleResize","addEventListener","removeEventListener","src","size","Title","level","to","onClick","MenuOutlined","theme","map","menuItem","Item","Text","Typography","demoImageUrl","NewsCard","news","name","image","thumbnail","contentUrl","description","length","slice","concat","providerAvatar","provider","providerName","publishedAt","moment","datePublished","startOf","fromNow","hoverable","href","target","rel","alt","style","maxWidth","maxHeight","NewsList","gutter","xs","sm","lg","LineChart","coinHistory","currentPrice","coinName","labels","item","timestamp","Date","toLocaleDateString","datasets","price","fill","backgroundColor","borderColor","marginTop","change","options","scales","yAxes","ticks","beginAtZero","ScrollToTop","pathname","useLocation","scrollTo","CryptocurrencyCard","currency","cryptoPagePath","rank","extra","iconUrl","millify","marketCap","dailyChange","CryptocurrenciesList","cryptos","Home","isFetching1","isFetching","isFetching2","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Option","Select","News","setCategory","currencies","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","onChange","orientation","Crypto","setTimePeriod","coinId","useParams","crypto","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","createStats","slug","defaultValue","HTMLReactParser","links","link","type","Exchanges","rows","exchange","key","markets","marketShare","columns","dataIndex","dataSource","expandable","expandedRowRender","record","rowExpandable","Cryptocurrencies","searchTerm","setSearchTerm","setCryptos","filter","event","App","Logo","exact","color","textAlign","configureStore","reducer","middleware","getDefaultMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d645de91.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst cryptoNewsApiHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_NEWS_API_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_CRYPTO_NEWS_API_KEY,\n};\n\nconst createRequest = (url) => ({\n  url,\n  headers: cryptoNewsApiHeaders,\n});\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ count, category }) => createRequest(`/news/search?q=${category}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n      transformResponse: (response) => response?.value ?? [],\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_API_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_CRYPTO_API_KEY,\n};\n\nconst createRequest = (url) => ({\n  url,\n  headers: cryptoApiHeaders,\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: ({ count }) => createRequest(`/coins?limit=${count}`),\n      transformResponse: (response) => ({\n        coins: response?.data?.coins ?? [],\n        stats: response?.data?.stats ?? {},\n      }),\n    }),\n    getCrypto: builder.query({\n      query: ({ id }) => createRequest(`/coin/${id}`),\n      transformResponse: (response) => response?.data?.coin ?? {},\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ id, timePeriod }) => createRequest(`/coin/${id}/history/${timePeriod}`),\n      transformResponse: (response) => response?.data?.history ?? [],\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n      transformResponse: (response) => response?.data?.exchanges ?? [],\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n","import { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","export const getScreenSize = () => window.innerWidth;\n\nexport const toggle = (x) => !x;\n","export const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\n\nexport const timePeriods = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\nexport const defaultTimePeriod = '7d';\n","import { useState, useEffect } from 'react';\n\nimport { Menu, Button, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from '@ant-design/icons';\n\nimport { getScreenSize, toggle } from 'utils/common';\nimport { breakpoints } from 'config/constants';\n\nconst menuItems = [\n  {\n    path: '/',\n    label: 'Home',\n    icon: <HomeOutlined />\n  },\n  {\n    path: '/cryptocurrencies',\n    label: 'Cryptocurrencies',\n    icon: <FundOutlined />\n  },\n  {\n    path: '/exchanges',\n    label: 'Exchanges',\n    icon: <MoneyCollectOutlined />\n  },\n  {\n    path: '/news',\n    label: 'News',\n    icon: <BulbOutlined />\n  },\n];\n\nconst Navbar = ({ title, icon }) => {\n  const [isMenuActive, setIsMenuActive] = useState(false);\n  \n  const [screenSize, setScreenSize] = useState(getScreenSize);\n\n  const hideMenu = () => {\n    setIsMenuActive(false);\n  };\n\n  const toggleMenu = () => {\n    setIsMenuActive(toggle);\n  };\n\n  const handleMenuItemClick = () => {\n    if (screenSize < breakpoints.md) {\n      hideMenu();\n    }\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenSize(getScreenSize());\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    setIsMenuActive(screenSize >= breakpoints.md);\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title className=\"logo\" level={2}>\n          <Link to=\"/\">{title}</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={toggleMenu}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {isMenuActive && (\n        <Menu theme=\"dark\">\n          {menuItems.map((menuItem) => (\n            <Menu.Item\n              icon={menuItem.icon}\n              key={menuItem.label}\n              onClick={handleMenuItemClick}\n            >\n              <Link to={menuItem.path}>\n                {menuItem.label}\n              </Link>\n            </Menu.Item>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { Typography, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nconst { Text, Title } = Typography;\n\nconst demoImageUrl = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst NewsCard = ({ news }) => {\n  const { url, name, } = news;\n\n  const icon = news?.image?.thumbnail?.contentUrl ?? demoImageUrl;\n\n  const description = news.description.length > 100\n    ? news.description.slice(0, 100).concat('...')\n    : news.description;\n\n  const providerAvatar = news.provider[0]?.image?.thumbnail?.contentUrl ?? demoImageUrl;\n\n  const providerName = news.provider[0]?.name;\n\n  const publishedAt = moment(news.datePublished).startOf('ss').fromNow();\n\n  return (\n    <Card\n      className=\"news-card\"\n      hoverable\n    >\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      > \n        <div className=\"news-image-container\">\n          <Title\n            className=\"news-title\"\n            level={4}\n          >\n            {name}\n          </Title>\n          <img\n            src={icon}\n            alt={name}\n            style={{ maxWidth: '200px', maxHeight: '100px' }}\n          />\n        </div>\n        <p>\n          {description}\n        </p>\n        <div className=\"provider-container\">\n          <div>\n            <Avatar\n              src={providerAvatar}\n              alt=\"\"\n            />\n            <Text className=\"provider-name\">{providerName}</Text>\n          </div>\n          <Text>{publishedAt}</Text>\n        </div>\n      </a>\n    </Card>\n  );\n};\n\nexport default NewsCard;\n","import { Row, Col } from 'antd';\n\nimport { NewsCard } from 'components';\n\nconst NewsList = ({ news }) => (\n  <Row gutter={[24, 24]}>\n    {news.map((news) => (\n      <Col\n        key={news.url}\n        xs={24}\n        sm={12}\n        lg={8}\n      >\n        <NewsCard news={news} />\n      </Col>\n    ))}\n  </Row>\n);\n\nexport default NewsList;\n","import { Line } from 'react-chartjs-2';\nimport { Row, Col, Typography } from 'antd';\n\nimport { getChartData } from 'utils/crypto';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const data = getChartData(coinHistory);\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    }\n  };\n\n  return (\n    <div\n      className=\"line-chart\"\n      style={{ marginTop: '20px' }}  \n    >\n      <Row className=\"chart-header\">\n        <Title\n          className=\"chart-title\"\n          level={2}\n        >\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title\n            className=\"price-change\"\n            level={5}\n          >\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title\n            className=\"current-price\"\n            level={5}\n          >\n            Current {coinName} Price: ${currentPrice} \n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nexport default LineChart;\n","import millify from \"millify\";\nimport { \n  MoneyCollectOutlined, \n  DollarCircleOutlined, \n  FundOutlined, \n  ExclamationCircleOutlined, \n  StopOutlined, \n  TrophyOutlined, \n  CheckOutlined, \n  NumberOutlined, \n  ThunderboltOutlined\n} from '@ant-design/icons';\n\nexport const createStats = (crypto) => ({\n  stats: [\n    { title: 'Price to USD', value: `$ ${crypto.price && millify(crypto.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: crypto.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${crypto.volume && millify(crypto.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${crypto.marketCap && millify(crypto.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(crypto.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ],\n  genericStats: [\n    { title: 'Number Of Markets', value: crypto.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: crypto.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: crypto.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(crypto.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(crypto.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ],\n});\n\nexport const getChartData = (history) => {\n  const timestamps = history\n    .map((item) => item.timestamp)\n    .map((timestamp) => new Date(timestamp).toLocaleDateString())\n\n  const prices = history\n    .map((item) => item.price);\n\n  return {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Price in USD',\n        data: prices,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import { Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport millify from 'millify';\n\nconst CryptocurrencyCard = ({ currency }) => {\n  const cryptoPagePath = `/crypto/${currency.id}`;\n  const title = `${currency.rank}. ${currency.name}`;\n  const extra = (\n    <img\n      className=\"crypto-image\"\n      src={currency.iconUrl}\n      alt={currency.name}\n    />\n  );\n  const price = millify(currency.price);\n  const marketCap = millify(currency.marketCap);\n  const dailyChange = millify(currency.change);\n\n  return (\n    <Link\n      className=\"crypto-card\"\n      to={cryptoPagePath}\n    >\n      <Card\n        title={title}\n        extra={extra}\n        hoverable\n      >\n        <p>Price: {price}</p>\n        <p>Market Cap: {marketCap}</p>\n        <p>Daily Change: {dailyChange}%</p>\n      </Card>\n    </Link>\n  );\n};\n\nexport default CryptocurrencyCard;\n","import { Row, Col } from 'antd';\n\nimport { CryptocurrencyCard } from 'components';\n\nconst CryptocurrenciesList = ({ cryptos }) => (\n  <>\n    <Row\n      className=\"crypto-card-container\"\n      gutter={[32, 32]}\n    >\n      {cryptos.map((currency) => (\n        <Col\n          key={currency.id}\n          xs={24}\n          sm={12}\n          lg={6}\n        >\n          <CryptocurrencyCard\n            currency={currency}\n          />\n        </Col>\n      ))}\n    </Row>\n  </>\n);\n\nexport default CryptocurrenciesList;\n","import { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\nimport millify from 'millify';\n\nimport { useGetCryptoNewsQuery } from 'services/crypto-news';\nimport { useGetCryptosQuery } from 'services/crypto';\n\nimport { CryptocurrenciesList, NewsList, Loader } from 'components';\n\nconst { Title } = Typography;\n\nconst Home = () => {\n  const { data, isFetching: isFetching1 } = useGetCryptosQuery({ count: 10 });\n\n  const { data: news, isFetching: isFetching2 } = useGetCryptoNewsQuery({ category: 'Cryptocurrency', count: 6 })\n\n  return (\n    <div className=\"page\">\n      <Title className=\"heading\" level={2}>\n        Global Crypto Stats\n      </Title>\n\n      {isFetching1 ? (\n        <Loader />\n      ) : (\n        <Row>\n          <Col span={12}>\n            <Statistic \n              title=\"Total Cryptocurrencies\"\n              value={data.stats.total}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic \n              title=\"Total Exchanges\"\n              value={millify(data.stats.totalExchanges)}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic \n              title=\"Total Market Cap\"\n              value={millify(data.stats.totalMarketCap)}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic \n              title=\"Total 24h Volume\"\n              value={millify(data.stats.total24hVolume)}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic \n              title=\"Total Markets\"\n              value={millify(data.stats.totalMarkets)}\n            />\n          </Col>\n        </Row>\n      )}\n      \n      <div className=\"home-heading-container\">\n        <Title className=\"home-title\" level={2}>\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title className=\"show-more\" level={3}>\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      \n      {isFetching1 ? (\n        <Loader />\n      ) : (\n        <CryptocurrenciesList cryptos={data.coins} />\n      )}\n\n      <div className=\"home-heading-container\">\n        <Title className=\"home-title\" level={2}>\n          Latest Crypto News\n        </Title>\n        <Title className=\"show-more\" level={3}>\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      \n      {isFetching2 ? (\n        <Loader />\n      ) : (\n        <NewsList news={news} />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from 'react';\n\nimport { Row, Col, Select, Divider } from 'antd';\n\nimport { useGetCryptoNewsQuery } from 'services/crypto-news';\nimport { useGetCryptosQuery } from 'services/crypto';\n\nimport { NewsList, Loader } from 'components';\n\nconst { Option } = Select;\n\nconst News = () => {\n  const [category, setCategory] = useState('Cryptocurrency');\n\n  const { data: news, isFetching: isFetching1 } = useGetCryptoNewsQuery({\n    category,\n    count: 18,\n  });\n\n  const { data } = useGetCryptosQuery({\n    count: 100,\n  });\n\n  const currencies = data?.coins ?? [];\n\n  return (\n    <div className=\"page\">\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Select\n            className=\"search-news\"\n            showSearch\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) => {\n              return option.children.toLowerCase().includes(input.toLowerCase());\n            }}\n            onChange={setCategory}\n          >\n            <Option value=\"Cryptocurrency\">\n              Cryptocurrency\n            </Option>\n            {currencies.map((currency) => (\n              <Option\n                value={currency.name}\n                key={currency.name}  \n              >\n                {currency.name}   \n              </Option>\n            ))}\n          </Select>\n        </Col>\n      </Row>\n      <Divider orientation=\"left\" />\n      {isFetching1 ? (\n        <Loader />\n      ) : (\n        <NewsList news={news} />\n      )}\n    </div>\n  );\n};\n\nexport default News;\n","import { useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { Row, Col, Typography, Select } from 'antd';\nimport HTMLReactParser from \"html-react-parser\";\nimport millify from \"millify\";\n\nimport { LineChart, Loader } from 'components';\n\nimport { useGetCryptoQuery, useGetCryptoHistoryQuery } from 'services/crypto';\n\nimport { createStats } from 'utils/crypto';\nimport { timePeriods, defaultTimePeriod } from 'config/constants';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst Crypto = () => {\n  const [timePeriod, setTimePeriod] = useState(defaultTimePeriod);\n  \n  const { coinId } = useParams();\n\n  const { data: crypto, isFetching: isFetching1 } = useGetCryptoQuery({ id: coinId });\n\n  const { data: coinHistory, isFetching: isFetching2 } = useGetCryptoHistoryQuery({ id: coinId, timePeriod, })\n\n\n  if (isFetching1) {\n    return <Loader />;\n  }\n\n  const { stats, genericStats } = createStats(crypto);\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title\n          className=\"coin-name\"\n          level={2}\n        >\n          {crypto.name} ({crypto.slug}) Price\n        </Title>\n        <p>\n          {crypto.name} live price in US dollars.\n          View value statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        className=\"select-timeperiod\"\n        defaultValue=\"7d\"\n        placeholder=\"Select Time Period\"\n        onChange={setTimePeriod}\n      >\n        {timePeriods.map((timePeriod) => (\n          <Option\n            value={timePeriod}\n            key={timePeriod}  \n          >\n            {timePeriod}\n          </Option>\n        ))}\n      </Select>\n\n      {isFetching2 ? (\n        <Loader />\n      ) : (\n        <LineChart\n          coinHistory={coinHistory}\n          currentPrice={millify(crypto.price)}\n          coinName={crypto.name}\n        />\n      )}\n\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title\n              className=\"coin-details-heading\"\n              level={3}\n            >\n              {crypto.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the stats of {crypto.name}\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col\n              className=\"coin-stats\"\n              key={title}\n            >\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title\n              className=\"coin-details-heading\"\n              level={3}\n            >\n              Other Statistics\n            </Title>\n            <p>\n              An overview showing the stats of all cryptocurrencies\n            </p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col\n              className=\"coin-stats\"\n              key={title}\n            >\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title\n            className=\"coin-details-heading\"\n            level={3}\n          >\n            What is {crypto.name}\n          </Title>\n          <Text>\n            {HTMLReactParser(crypto.description)}\n          </Text>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title\n            className=\"coin-details-heading\"\n            level={3}\n          >\n            {crypto.name} Links\n          </Title>\n          {crypto.links.map((link) => (\n            <Row \n              className=\"coin-link\"\n              key={link.name}\n            >\n              <Title\n                className=\"link-name\"\n                level={5}\n              >\n                {link.type}\n              </Title>\n              <a\n                href={link.url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default Crypto;\n","import millify from \"millify\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { Table } from 'antd';\n\nimport { Loader } from 'components';\n\nimport { useGetExchangesQuery } from 'services/crypto';\n\nconst Exchanges = () => {\n  const { data: exchanges, isFetching } = useGetExchangesQuery();\n\n  if (isFetching) {\n    return <Loader />\n  }\n\n  const columns = [\n    { title: 'Exchanges', dataIndex: 'exchanges', key: 'exchanges' },\n    { title: '24h Trade Volume', dataIndex: 'volume', key: 'volume' },\n    { title: 'Markets', dataIndex: 'markets', key: 'markets' },\n    { title: 'Change', dataIndex: 'change', key: 'change' },\n  ];\n\n  const rows = exchanges.map((exchange) => ({\n    key: exchange.id,\n    exchanges: exchange.name,\n    volume: `$${millify(exchange.volume)}`,\n    markets: millify(exchange.numberOfMarkets),\n    change: `${millify(exchange.marketShare)}%`,\n    description: exchange.description,\n  }));\n\n  return (\n    <div className=\"page\">\n      <Table\n        columns={columns}\n        dataSource={rows}\n        expandable={{\n          expandedRowRender: record => HTMLReactParser(record.description),\n          rowExpandable: record => !!record.description,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Exchanges;\n","import { useState, useEffect } from 'react';\n\nimport { Input } from 'antd';\n\nimport { useGetCryptosQuery } from 'services/crypto';\n\nimport { CryptocurrenciesList, Loader } from 'components';\n\nconst Cryptocurrencies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const [cryptos, setCryptos] = useState([]);\n\n  const { data, isFetching } = useGetCryptosQuery({ count: 100 });\n\n  const handleSearchTermChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    const coins = data?.coins?.filter((coin) => {\n      return coin.name.toLowerCase().includes(searchTerm.toLowerCase());\n    }) ?? [];\n\n    setCryptos(coins);\n  }, [data, searchTerm]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"search-crypto\">\n        <Input\n          placeholder=\"Seach Cryptocurrencies\"\n          onChange={handleSearchTermChange}\n          value={searchTerm}\n        />\n      </div>\n      {isFetching ? (\n        <Loader />\n      ) : (\n        <CryptocurrenciesList cryptos={cryptos} />\n      )}\n    </div>\n  );\n};\n\nexport default Cryptocurrencies;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Space, Typography } from 'antd';\n\nimport { Home, News, Exchanges, Cryptocurrencies, Crypto } from 'pages';\n\nimport { Navbar, ScrollToTop } from 'components';\n\nimport Logo from 'assets/images/cryptocurrency.png';\n\nconst App = () => (\n  <>\n    <ScrollToTop />\n    <div className=\"app\">\n      <nav className=\"navbar\">\n        <Navbar icon={Logo} title=\"Cryptoverse\" />\n      </nav>\n      <main className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <Home />\n              </Route>\n              <Route path=\"/news\">\n                <News />\n              </Route>\n              <Route path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route path=\"/crypto/:coinId\">\n                <Crypto />\n              </Route>\n              <Route path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <footer className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: 'white', textAlign: 'center' }}  \n          >\n            Cryptoverse\n          </Typography.Title>\n          <Typography.Text style={{ color: 'white', textAlign: 'center' }}>\n            All rights reserved\n          </Typography.Text>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </footer>\n      </main>\n    </div>\n  </>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from 'services/crypto';\nimport { cryptoNewsApi } from 'services/crypto-news';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(\n      cryptoApi.middleware,\n      cryptoNewsApi.middleware,\n    ) \n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider} from 'react-redux';\n\nimport App from 'App';\nimport store from 'store';\nimport reportWebVitals from 'reportWebVitals';\n\nimport 'antd/dist/antd.css';\nimport 'styles/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}